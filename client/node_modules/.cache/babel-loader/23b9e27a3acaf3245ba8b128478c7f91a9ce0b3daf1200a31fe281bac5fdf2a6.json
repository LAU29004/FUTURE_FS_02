{"ast":null,"code":"var _jsxFileName = \"D:\\\\weather-dashboard\\\\weather-dashboard\\\\client\\\\src\\\\components\\\\FavoriteCities.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FavoriteCities({\n  favoriteCities,\n  setFavoriteCities\n}) {\n  _s();\n  const [weatherData, setWeatherData] = useState([]);\n  useEffect(() => {\n    if (!favoriteCities || favoriteCities.length === 0) {\n      setWeatherData([]);\n      return;\n    }\n    const fetchAllWeather = async () => {\n      try {\n        const promises = favoriteCities.map(city => axios.get(`http://localhost:5000/api/weather?city=${city}`).then(res => res.data));\n        const results = await Promise.all(promises);\n        setWeatherData(results);\n      } catch (error) {\n        console.error(\"Failed to fetch favorite cities weather\", error);\n      }\n    };\n    fetchAllWeather();\n  }, [favoriteCities]);\n  if (weatherData.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No favorite cities added yet.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 40\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\n      gap: \"16px\",\n      marginTop: \"20px\"\n    },\n    children: weatherData.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        borderRadius: \"8px\",\n        padding: \"12px\",\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [data.name, \", \", data.sys.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textTransform: \"capitalize\"\n        },\n        children: data.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temp: \", Math.round(data.main.temp), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", data.main.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind: \", data.wind.speed, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFavoriteCities(favoriteCities.filter(city => city !== data.name)),\n        style: {\n          position: \"absolute\",\n          top: \"10px\",\n          right: \"10px\",\n          background: \"none\",\n          border: \"none\",\n          cursor: \"pointer\",\n          fontSize: \"18px\",\n          color: \"red\"\n        },\n        \"aria-label\": `Remove ${data.name} from favorites`,\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, data.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(FavoriteCities, \"/WBsAESNl5X9UOGQ8x5/AmmeTCo=\");\n_c = FavoriteCities;\nexport default FavoriteCities;\nvar _c;\n$RefreshReg$(_c, \"FavoriteCities\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","FavoriteCities","favoriteCities","setFavoriteCities","_s","weatherData","setWeatherData","length","fetchAllWeather","promises","map","city","get","then","res","data","results","Promise","all","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","gap","marginTop","border","borderRadius","padding","position","name","sys","country","textTransform","weather","description","Math","round","main","temp","humidity","wind","speed","onClick","filter","top","right","background","cursor","fontSize","color","id","_c","$RefreshReg$"],"sources":["D:/weather-dashboard/weather-dashboard/client/src/components/FavoriteCities.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction FavoriteCities({ favoriteCities, setFavoriteCities }) {\r\n  const [weatherData, setWeatherData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!favoriteCities || favoriteCities.length === 0) {\r\n      setWeatherData([]);\r\n      return;\r\n    }\r\n\r\n    const fetchAllWeather = async () => {\r\n      try {\r\n        const promises = favoriteCities.map((city) =>\r\n          axios.get(`http://localhost:5000/api/weather?city=${city}`).then(res => res.data)\r\n        );\r\n        const results = await Promise.all(promises);\r\n        setWeatherData(results);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch favorite cities weather\", error);\r\n      }\r\n    };\r\n\r\n    fetchAllWeather();\r\n  }, [favoriteCities]);\r\n\r\n  if (weatherData.length === 0) return <p>No favorite cities added yet.</p>;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\r\n        gap: \"16px\",\r\n        marginTop: \"20px\",\r\n      }}\r\n    >\r\n      {weatherData.map((data) => (\r\n        <div \r\n          key={data.id} \r\n          style={{ border: \"1px solid #ccc\", borderRadius: \"8px\", padding: \"12px\", position: \"relative\" }}\r\n        >\r\n          <h3>{data.name}, {data.sys.country}</h3>\r\n          <p style={{ textTransform: \"capitalize\" }}>{data.weather[0].description}</p>\r\n          <p>Temp: {Math.round(data.main.temp)}°C</p>\r\n          <p>Humidity: {data.main.humidity}%</p>\r\n          <p>Wind: {data.wind.speed} km/h</p>\r\n\r\n          <button\r\n            onClick={() => setFavoriteCities(favoriteCities.filter(city => city !== data.name))}\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"10px\",\r\n              right: \"10px\",\r\n              background: \"none\",\r\n              border: \"none\",\r\n              cursor: \"pointer\",\r\n              fontSize: \"18px\",\r\n              color: \"red\",\r\n            }}\r\n            aria-label={`Remove ${data.name} from favorites`}\r\n          >\r\n            ✖\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavoriteCities;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}