{"ast":null,"code":"var _jsxFileName = \"D:\\\\weather-dashboard\\\\weather-dashboard\\\\client\\\\src\\\\components\\\\FavoriteCities.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst favoriteCitiesList = [\"New York\", \"London\", \"Tokyo\", \"Sydney\"]; // Example favorites\n\nfunction FavoriteCities() {\n  _s();\n  const [weatherData, setWeatherData] = useState([]);\n  useEffect(() => {\n    const fetchAllWeather = async () => {\n      try {\n        const promises = favoriteCitiesList.map(city => axios.get(`http://localhost:5000/api/weather?city=${city}`).then(res => res.data));\n        const results = await Promise.all(promises);\n        setWeatherData(results);\n      } catch (error) {\n        console.error(\"Failed to fetch favorite cities weather\", error);\n      }\n    };\n    fetchAllWeather();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"favorites-grid\",\n    children: weatherData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favorite-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temp: \", Math.round(data.main.temp), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", data.main.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind: \", data.wind.speed, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(FavoriteCities, \"/WBsAESNl5X9UOGQ8x5/AmmeTCo=\");\n_c = FavoriteCities;\nexport default FavoriteCities;\nvar _c;\n$RefreshReg$(_c, \"FavoriteCities\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","favoriteCitiesList","FavoriteCities","_s","weatherData","setWeatherData","fetchAllWeather","promises","map","city","get","then","res","data","results","Promise","all","error","console","className","children","index","name","fileName","_jsxFileName","lineNumber","columnNumber","weather","description","Math","round","main","temp","humidity","wind","speed","_c","$RefreshReg$"],"sources":["D:/weather-dashboard/weather-dashboard/client/src/components/FavoriteCities.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../App.css\";\r\n\r\nconst favoriteCitiesList = [\"New York\", \"London\", \"Tokyo\", \"Sydney\"]; // Example favorites\r\n\r\nfunction FavoriteCities() {\r\n  const [weatherData, setWeatherData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAllWeather = async () => {\r\n      try {\r\n        const promises = favoriteCitiesList.map((city) =>\r\n          axios.get(`http://localhost:5000/api/weather?city=${city}`).then((res) => res.data)\r\n        );\r\n        const results = await Promise.all(promises);\r\n        setWeatherData(results);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch favorite cities weather\", error);\r\n      }\r\n    };\r\n    fetchAllWeather();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"favorites-grid\">\r\n      {weatherData.map((data, index) => (\r\n        <div key={index} className=\"favorite-card\">\r\n          <h3>{data.name}</h3>\r\n          <p>{data.weather[0].description}</p>\r\n          <p>Temp: {Math.round(data.main.temp)}Â°C</p>\r\n          <p>Humidity: {data.main.humidity}%</p>\r\n          <p>Wind: {data.wind.speed} km/h</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavoriteCities;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,kBAAkB,GAAG,CAAC,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;;AAEtE,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAGN,kBAAkB,CAACO,GAAG,CAAEC,IAAI,IAC3CX,KAAK,CAACY,GAAG,CAAC,0CAA0CD,IAAI,EAAE,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CACpF,CAAC;QACD,MAAMC,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACT,QAAQ,CAAC;QAC3CF,cAAc,CAACS,OAAO,CAAC;MACzB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MACjE;IACF,CAAC;IACDX,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKmB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BhB,WAAW,CAACI,GAAG,CAAC,CAACK,IAAI,EAAEQ,KAAK,kBAC3BrB,OAAA;MAAiBmB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBACxCpB,OAAA;QAAAoB,QAAA,EAAKP,IAAI,CAACS;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpB1B,OAAA;QAAAoB,QAAA,EAAIP,IAAI,CAACc,OAAO,CAAC,CAAC,CAAC,CAACC;MAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpC1B,OAAA;QAAAoB,QAAA,GAAG,QAAM,EAACS,IAAI,CAACC,KAAK,CAACjB,IAAI,CAACkB,IAAI,CAACC,IAAI,CAAC,EAAC,OAAE;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC3C1B,OAAA;QAAAoB,QAAA,GAAG,YAAU,EAACP,IAAI,CAACkB,IAAI,CAACE,QAAQ,EAAC,GAAC;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACtC1B,OAAA;QAAAoB,QAAA,GAAG,QAAM,EAACP,IAAI,CAACqB,IAAI,CAACC,KAAK,EAAC,OAAK;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA,GAL3BL,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACvB,EAAA,CA/BQD,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AAiCvB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}