{"ast":null,"code":"var _jsxFileName = \"D:\\\\weather-dashboard\\\\weather-dashboard\\\\client\\\\src\\\\components\\\\WeatherCard.js\";\nimport React from \"react\";\nimport \"./WeatherCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherCard({\n  data,\n  favoriteCities = [],\n  setFavoriteCities\n}) {\n  const city = data.name;\n  const isFavorite = favoriteCities.some(c => c.name === city);\n  const toggleFavorite = () => {\n    if (isFavorite) {\n      setFavoriteCities(favoriteCities.filter(c => c.name !== city));\n    } else {\n      setFavoriteCities([...favoriteCities, data]);\n    }\n  };\n  const getEmoji = () => {\n    const hour = new Date().getHours();\n    const weather = data.weather[0].main.toLowerCase();\n    if (weather.includes(\"cloud\")) return \"‚õÖ\";\n    if (weather.includes(\"rain\")) return \"üåßÔ∏è\";\n    if (weather.includes(\"snow\")) return \"‚ùÑÔ∏è\";\n    if (hour >= 6 && hour < 18) return \"‚òÄÔ∏è\";\n    return \"üåô\";\n  };\n  const getTimeOfDay = () => {\n    const hour = new Date().getHours();\n    if (hour >= 5 && hour < 12) return \"morning\";else if (hour >= 12 && hour < 17) return \"afternoon\";else if (hour >= 17 && hour < 20) return \"evening\";else return \"night\";\n  };\n  const timeOfDay = getTimeOfDay();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `weather-card ${timeOfDay}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [city, \", \", data.sys.country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      children: data.weather[0].description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temp: \", Math.round(data.main.temp), \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Humidity: \", data.main.humidity, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Wind: \", data.wind.speed, \" km/h\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Time of Day:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }, this), \" \", timeOfDay.charAt(0).toUpperCase() + timeOfDay.slice(1)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleFavorite,\n      className: `favorite-btn ${isFavorite ? \"active\" : \"\"}`,\n      \"aria-label\": isFavorite ? \"Remove from favorites\" : \"Add to favorites\",\n      children: [isFavorite ? \"‚ù§Ô∏è\" : \"ü§ç\", \" \", getEmoji()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c = WeatherCard;\nexport default WeatherCard;\nvar _c;\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","WeatherCard","data","favoriteCities","setFavoriteCities","city","name","isFavorite","some","c","toggleFavorite","filter","getEmoji","hour","Date","getHours","weather","main","toLowerCase","includes","getTimeOfDay","timeOfDay","className","children","sys","country","fileName","_jsxFileName","lineNumber","columnNumber","description","Math","round","temp","humidity","wind","speed","charAt","toUpperCase","slice","onClick","_c","$RefreshReg$"],"sources":["D:/weather-dashboard/weather-dashboard/client/src/components/WeatherCard.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./WeatherCard.css\";\r\n\r\nfunction WeatherCard({ data, favoriteCities = [], setFavoriteCities }) {\r\n  const city = data.name;\r\n  const isFavorite = favoriteCities.some((c) => c.name === city);\r\n\r\n  const toggleFavorite = () => {\r\n    if (isFavorite) {\r\n      setFavoriteCities(favoriteCities.filter((c) => c.name !== city));\r\n    } else {\r\n      setFavoriteCities([...favoriteCities, data]);\r\n    }\r\n  };\r\n\r\n  const getEmoji = () => {\r\n    const hour = new Date().getHours();\r\n    const weather = data.weather[0].main.toLowerCase();\r\n\r\n    if (weather.includes(\"cloud\")) return \"‚õÖ\";\r\n    if (weather.includes(\"rain\")) return \"üåßÔ∏è\";\r\n    if (weather.includes(\"snow\")) return \"‚ùÑÔ∏è\";\r\n    if (hour >= 6 && hour < 18) return \"‚òÄÔ∏è\";\r\n    return \"üåô\";\r\n  };\r\n\r\n  const getTimeOfDay = () => {\r\n    const hour = new Date().getHours();\r\n\r\n    if (hour >= 5 && hour < 12) return \"morning\";\r\n    else if (hour >= 12 && hour < 17) return \"afternoon\";\r\n    else if (hour >= 17 && hour < 20) return \"evening\";\r\n    else return \"night\";\r\n  };\r\n\r\n  const timeOfDay = getTimeOfDay();\r\n\r\n  return (\r\n    <div className={`weather-card ${timeOfDay}`}>\r\n      <h2>\r\n        {city}, {data.sys.country}\r\n      </h2>\r\n      <p className=\"description\">{data.weather[0].description}</p>\r\n      <p>Temp: {Math.round(data.main.temp)}¬∞C</p>\r\n      <p>Humidity: {data.main.humidity}%</p>\r\n      <p>Wind: {data.wind.speed} km/h</p>\r\n      <p><strong>Time of Day:</strong> {timeOfDay.charAt(0).toUpperCase() + timeOfDay.slice(1)}</p>\r\n\r\n      <button\r\n        onClick={toggleFavorite}\r\n        className={`favorite-btn ${isFavorite ? \"active\" : \"\"}`}\r\n        aria-label={isFavorite ? \"Remove from favorites\" : \"Add to favorites\"}\r\n      >\r\n        {isFavorite ? \"‚ù§Ô∏è\" : \"ü§ç\"} {getEmoji()}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}