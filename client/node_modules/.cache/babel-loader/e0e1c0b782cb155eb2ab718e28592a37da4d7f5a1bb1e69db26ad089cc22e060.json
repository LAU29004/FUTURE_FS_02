{"ast":null,"code":"var _jsxFileName = \"D:\\\\weather-dashboard\\\\weather-dashboard\\\\client\\\\src\\\\components\\\\FavoriteCities.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FavoriteCities({\n  favoriteCities,\n  setFavoriteCities\n}) {\n  _s();\n  const [weatherDataList, setWeatherDataList] = useState([]);\n  useEffect(() => {\n    if (favoriteCities.length === 0) {\n      setWeatherDataList([]);\n      return;\n    }\n    const fetchWeatherForFavorites = async () => {\n      try {\n        const promises = favoriteCities.map(city => axios.get(`http://localhost:5000/api/weather?city=${city}`).then(res => res.data));\n        const results = await Promise.all(promises);\n        setWeatherDataList(results);\n      } catch (error) {\n        console.error(\"Failed to fetch favorite cities weather\", error);\n      }\n    };\n    fetchWeatherForFavorites();\n  }, [favoriteCities]);\n  if (favoriteCities.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No favorite cities added yet.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 43\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\n      gap: 16\n    },\n    children: weatherDataList.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        borderRadius: 8,\n        padding: 12,\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [data.name, \", \", data.sys.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textTransform: \"capitalize\"\n        },\n        children: data.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temp: \", Math.round(data.main.temp), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", data.main.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind: \", data.wind.speed, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFavoriteCities(favoriteCities.filter(c => c !== data.name)),\n        style: {\n          position: \"absolute\",\n          top: 12,\n          right: 12,\n          background: \"none\",\n          border: \"none\",\n          cursor: \"pointer\",\n          fontSize: 20,\n          color: \"red\"\n        },\n        \"aria-label\": \"Remove from favorites\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, data.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(FavoriteCities, \"/N2kIvNF894F0zLHBJxwpQ2z+84=\");\n_c = FavoriteCities;\nexport default FavoriteCities;\nvar _c;\n$RefreshReg$(_c, \"FavoriteCities\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","FavoriteCities","favoriteCities","setFavoriteCities","_s","weatherDataList","setWeatherDataList","length","fetchWeatherForFavorites","promises","map","city","get","then","res","data","results","Promise","all","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","gap","border","borderRadius","padding","position","name","sys","country","textTransform","weather","description","Math","round","main","temp","humidity","wind","speed","onClick","filter","c","top","right","background","cursor","fontSize","color","id","_c","$RefreshReg$"],"sources":["D:/weather-dashboard/weather-dashboard/client/src/components/FavoriteCities.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction FavoriteCities({ favoriteCities, setFavoriteCities }) {\r\n  const [weatherDataList, setWeatherDataList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (favoriteCities.length === 0) {\r\n      setWeatherDataList([]);\r\n      return;\r\n    }\r\n\r\n    const fetchWeatherForFavorites = async () => {\r\n      try {\r\n        const promises = favoriteCities.map((city) =>\r\n          axios\r\n            .get(`http://localhost:5000/api/weather?city=${city}`)\r\n            .then((res) => res.data)\r\n        );\r\n        const results = await Promise.all(promises);\r\n        setWeatherDataList(results);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch favorite cities weather\", error);\r\n      }\r\n    };\r\n\r\n    fetchWeatherForFavorites();\r\n  }, [favoriteCities]);\r\n\r\n  if (favoriteCities.length === 0) return <p>No favorite cities added yet.</p>;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\r\n        gap: 16,\r\n      }}\r\n    >\r\n      {weatherDataList.map((data) => (\r\n        <div\r\n          key={data.id}\r\n          style={{\r\n            border: \"1px solid #ccc\",\r\n            borderRadius: 8,\r\n            padding: 12,\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <h3>\r\n            {data.name}, {data.sys.country}\r\n          </h3>\r\n          <p style={{ textTransform: \"capitalize\" }}>{data.weather[0].description}</p>\r\n          <p>Temp: {Math.round(data.main.temp)}°C</p>\r\n          <p>Humidity: {data.main.humidity}%</p>\r\n          <p>Wind: {data.wind.speed} km/h</p>\r\n          <button\r\n            onClick={() =>\r\n              setFavoriteCities(favoriteCities.filter((c) => c !== data.name))\r\n            }\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 12,\r\n              right: 12,\r\n              background: \"none\",\r\n              border: \"none\",\r\n              cursor: \"pointer\",\r\n              fontSize: 20,\r\n              color: \"red\",\r\n            }}\r\n            aria-label=\"Remove from favorites\"\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavoriteCities;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAAC;EAAEC,cAAc;EAAEC;AAAkB,CAAC,EAAE;EAAAC,EAAA;EAC7D,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1DD,SAAS,CAAC,MAAM;IACd,IAAIM,cAAc,CAACK,MAAM,KAAK,CAAC,EAAE;MAC/BD,kBAAkB,CAAC,EAAE,CAAC;MACtB;IACF;IAEA,MAAME,wBAAwB,GAAG,MAAAA,CAAA,KAAY;MAC3C,IAAI;QACF,MAAMC,QAAQ,GAAGP,cAAc,CAACQ,GAAG,CAAEC,IAAI,IACvCb,KAAK,CACFc,GAAG,CAAC,0CAA0CD,IAAI,EAAE,CAAC,CACrDE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAC3B,CAAC;QACD,MAAMC,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACT,QAAQ,CAAC;QAC3CH,kBAAkB,CAACU,OAAO,CAAC;MAC7B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MACjE;IACF,CAAC;IAEDX,wBAAwB,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACN,cAAc,CAAC,CAAC;EAEpB,IAAIA,cAAc,CAACK,MAAM,KAAK,CAAC,EAAE,oBAAOP,OAAA;IAAAqB,QAAA,EAAG;EAA6B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE5E,oBACEzB,OAAA;IACE0B,KAAK,EAAE;MACLC,OAAO,EAAE,MAAM;MACfC,mBAAmB,EAAE,sCAAsC;MAC3DC,GAAG,EAAE;IACP,CAAE;IAAAR,QAAA,EAEDhB,eAAe,CAACK,GAAG,CAAEK,IAAI,iBACxBf,OAAA;MAEE0B,KAAK,EAAE;QACLI,MAAM,EAAE,gBAAgB;QACxBC,YAAY,EAAE,CAAC;QACfC,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE;MACZ,CAAE;MAAAZ,QAAA,gBAEFrB,OAAA;QAAAqB,QAAA,GACGN,IAAI,CAACmB,IAAI,EAAC,IAAE,EAACnB,IAAI,CAACoB,GAAG,CAACC,OAAO;MAAA;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACLzB,OAAA;QAAG0B,KAAK,EAAE;UAAEW,aAAa,EAAE;QAAa,CAAE;QAAAhB,QAAA,EAAEN,IAAI,CAACuB,OAAO,CAAC,CAAC,CAAC,CAACC;MAAW;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5EzB,OAAA;QAAAqB,QAAA,GAAG,QAAM,EAACmB,IAAI,CAACC,KAAK,CAAC1B,IAAI,CAAC2B,IAAI,CAACC,IAAI,CAAC,EAAC,OAAE;MAAA;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC3CzB,OAAA;QAAAqB,QAAA,GAAG,YAAU,EAACN,IAAI,CAAC2B,IAAI,CAACE,QAAQ,EAAC,GAAC;MAAA;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACtCzB,OAAA;QAAAqB,QAAA,GAAG,QAAM,EAACN,IAAI,CAAC8B,IAAI,CAACC,KAAK,EAAC,OAAK;MAAA;QAAAxB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACnCzB,OAAA;QACE+C,OAAO,EAAEA,CAAA,KACP5C,iBAAiB,CAACD,cAAc,CAAC8C,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKlC,IAAI,CAACmB,IAAI,CAAC,CAChE;QACDR,KAAK,EAAE;UACLO,QAAQ,EAAE,UAAU;UACpBiB,GAAG,EAAE,EAAE;UACPC,KAAK,EAAE,EAAE;UACTC,UAAU,EAAE,MAAM;UAClBtB,MAAM,EAAE,MAAM;UACduB,MAAM,EAAE,SAAS;UACjBC,QAAQ,EAAE,EAAE;UACZC,KAAK,EAAE;QACT,CAAE;QACF,cAAW,uBAAuB;QAAAlC,QAAA,EACnC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAhCJV,IAAI,CAACyC,EAAE;MAAAlC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiCT,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACrB,EAAA,CA3EQH,cAAc;AAAAwD,EAAA,GAAdxD,cAAc;AA6EvB,eAAeA,cAAc;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}